<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Yuk's Blog</title><link href="https://sinoyster.github.io/" rel="alternate"></link><link href="https://sinoyster.github.io/feeds/all.atom.xml" rel="self"></link><id>https://sinoyster.github.io/</id><updated>2016-01-08T10:20:00+08:00</updated><entry><title>搭建数据工作者的blog</title><link href="https://sinoyster.github.io/articles/2016/01/08/data-science-blog.html" rel="alternate"></link><published>2016-01-08T10:20:00+08:00</published><updated>2016-01-08T10:20:00+08:00</updated><author><name>Yuk Wong</name></author><id>tag:sinoyster.github.io,2016-01-08:/articles/2016/01/08/data-science-blog.html</id><summary type="html">&lt;p&gt;作为一个天天和数据打交道的人，没有一个高大上的博客是说不过去的，市面上的各种博客主要是适合文字工作者，作为一个数据工作者，首先博客要支持各种数学公式和图形，ipython notebook也是必须的，其次博客要能用markdown来写，支持Git进行版本控制。因为一直用Python，综合考虑下来，圈定Github Pages + Pelican。 Github是全球最大的同性交友社区，支持静态页面，用Git进行版本控制。Git就不在这里多说了，不懂的推荐&lt;a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" title="廖雪峰Git教程"&gt;廖雪峰Git教程&lt;/a&gt;。&lt;a href="http://blog.getpelican.com/" title="Pelican"&gt;Pelican&lt;/a&gt;是Python写的静态网站生成器，支持众多的&lt;a href="https://github.com/getpelican/pelican-themes" title="pelican-themes"&gt;扩展&lt;/a&gt;和&lt;a href="https://github.com/getpelican/pelican-themes" title="pelican-themes"&gt;主题&lt;/a&gt;，包括我们下面用到的ipython-notebook和mathjax插件。&lt;/p&gt;
&lt;h2 id="toc_45a6145e6d28da258a2ae31a1f887c54"&gt;首先安装Pelican环境&lt;/h2&gt;
&lt;h3 id="toc_2c4faee8878a9b157b6951078db24351"&gt;1、安装Python和Pip环境&lt;/h3&gt;
&lt;p&gt;搞数据的大多都使用&lt;a href="https://www.continuum.io/anaconda-overview" title="Anaconda"&gt;anaconda&lt;/a&gt;的python发行版，下载对应&lt;a href="https://www.continuum.io/downloads"&gt;平台&lt;/a&gt;的anaconda包，并安装&lt;/p&gt;
&lt;h3 id="toc_1b58a4794faae5a8d0071433579a2065"&gt;2、安装pelican并初始化&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install pelican
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;初始化 pelican&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;~$ mkdir &lt;span class="nb"&gt;cd&lt;/span&gt; /path/to/blog
~$ &lt;span class="nb"&gt;cd …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;作为一个天天和数据打交道的人，没有一个高大上的博客是说不过去的，市面上的各种博客主要是适合文字工作者，作为一个数据工作者，首先博客要支持各种数学公式和图形，ipython notebook也是必须的，其次博客要能用markdown来写，支持Git进行版本控制。因为一直用Python，综合考虑下来，圈定Github Pages + Pelican。 Github是全球最大的同性交友社区，支持静态页面，用Git进行版本控制。Git就不在这里多说了，不懂的推荐&lt;a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" title="廖雪峰Git教程"&gt;廖雪峰Git教程&lt;/a&gt;。&lt;a href="http://blog.getpelican.com/" title="Pelican"&gt;Pelican&lt;/a&gt;是Python写的静态网站生成器，支持众多的&lt;a href="https://github.com/getpelican/pelican-themes" title="pelican-themes"&gt;扩展&lt;/a&gt;和&lt;a href="https://github.com/getpelican/pelican-themes" title="pelican-themes"&gt;主题&lt;/a&gt;，包括我们下面用到的ipython-notebook和mathjax插件。&lt;/p&gt;
&lt;h2 id="toc_45a6145e6d28da258a2ae31a1f887c54"&gt;首先安装Pelican环境&lt;/h2&gt;
&lt;h3 id="toc_2c4faee8878a9b157b6951078db24351"&gt;1、安装Python和Pip环境&lt;/h3&gt;
&lt;p&gt;搞数据的大多都使用&lt;a href="https://www.continuum.io/anaconda-overview" title="Anaconda"&gt;anaconda&lt;/a&gt;的python发行版，下载对应&lt;a href="https://www.continuum.io/downloads"&gt;平台&lt;/a&gt;的anaconda包，并安装&lt;/p&gt;
&lt;h3 id="toc_1b58a4794faae5a8d0071433579a2065"&gt;2、安装pelican并初始化&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install pelican
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;初始化 pelican&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;~$ mkdir &lt;span class="nb"&gt;cd&lt;/span&gt; /path/to/blog
~$ &lt;span class="nb"&gt;cd&lt;/span&gt; /path/to/blog
$ pelican-quickstart 
Welcome to pelican-quickstart v3.7.1.

This script will &lt;span class="nb"&gt;help&lt;/span&gt; you create a new Pelican-based website.

Please answer the following questions so this script can generate the files
needed by Pelican.


&amp;gt; Where &lt;span class="k"&gt;do&lt;/span&gt; you want to create your new web site? &lt;span class="o"&gt;[&lt;/span&gt;.&lt;span class="o"&gt;]&lt;/span&gt; 
&amp;gt; What will be the title of this web site? My Blog
&amp;gt; Who will be the author of this web site? Yuk Wong
&amp;gt; What will be the default language of this web site? &lt;span class="o"&gt;[&lt;/span&gt;en&lt;span class="o"&gt;]&lt;/span&gt; 
&amp;gt; Do you want to specify a URL prefix? e.g., http://example.com   &lt;span class="o"&gt;(&lt;/span&gt;Y/n&lt;span class="o"&gt;)&lt;/span&gt; n
&amp;gt; Do you want to &lt;span class="nb"&gt;enable&lt;/span&gt; article pagination? &lt;span class="o"&gt;(&lt;/span&gt;Y/n&lt;span class="o"&gt;)&lt;/span&gt; 
&amp;gt; How many articles per page &lt;span class="k"&gt;do&lt;/span&gt; you want? &lt;span class="o"&gt;[&lt;/span&gt;10&lt;span class="o"&gt;]&lt;/span&gt; 
&amp;gt; What is your &lt;span class="nb"&gt;time&lt;/span&gt; zone? &lt;span class="o"&gt;[&lt;/span&gt;Europe/Paris&lt;span class="o"&gt;]&lt;/span&gt; Asia/ShangHai
&amp;gt; Do you want to generate a Fabfile/Makefile to automate generation and publishing? &lt;span class="o"&gt;(&lt;/span&gt;Y/n&lt;span class="o"&gt;)&lt;/span&gt; 
&amp;gt; Do you want an auto-reload &lt;span class="p"&gt;&amp;amp;&lt;/span&gt; simpleHTTP script to assist with theme and site development? &lt;span class="o"&gt;(&lt;/span&gt;Y/n&lt;span class="o"&gt;)&lt;/span&gt; 
&amp;gt; Do you want to upload your website using FTP? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt; 
&amp;gt; Do you want to upload your website using SSH? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt; 
&amp;gt; Do you want to upload your website using Dropbox? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt; 
&amp;gt; Do you want to upload your website using S3? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt; 
&amp;gt; Do you want to upload your website using Rackspace Cloud Files? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt; 
&amp;gt; Do you want to upload your website using GitHub Pages? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt; y
&amp;gt; Is this your personal page &lt;span class="o"&gt;(&lt;/span&gt;username.github.io&lt;span class="o"&gt;)&lt;/span&gt;? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt; 
Done. Your new project is available at /path/to/blog
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;目录结构&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ mkdir plugins themes
$ tree
.
├── content              &lt;span class="c1"&gt;# 写的文章放这里&lt;/span&gt;
├── output               &lt;span class="c1"&gt;# 生成的输出文件（发布的内容,静态html）&lt;/span&gt;
├── plugins              &lt;span class="c1"&gt;# 存放官方和第三方的plugin&lt;/span&gt;
├── themes              &lt;span class="c1"&gt;# 存放官方和第三方主题&lt;/span&gt;
├── develop_server.sh    &lt;span class="c1"&gt;# 测试http服务器启停脚本&lt;/span&gt;
├── fabfile.py            &lt;span class="c1"&gt;# 远程应用部署和系统管理工具&lt;/span&gt;
├── Makefile             &lt;span class="c1"&gt;# 方便管理博客的Makefile&lt;/span&gt;
├── pelicanconf.py   &lt;span class="c1"&gt;# 主配置文件&lt;/span&gt;
└── publishconf.py   &lt;span class="c1"&gt;# 发布配置，默认包含住配置&lt;/span&gt;
&lt;span class="m"&gt;2&lt;/span&gt; directories, &lt;span class="m"&gt;5&lt;/span&gt; files
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="toc_e643e396188c6505795c15483c55173a"&gt;编辑一篇测试文档&lt;/h3&gt;
&lt;p&gt;从&lt;a href="https://coding.net/u/php/p/Markdown/git/raw/master/syntax.md"&gt;这里&lt;/a&gt;复制一份简体中文Markdown示例文档，保存在content目录，并在文本开头添加上Pelican的元数据&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; content
$ wget -c &lt;span class="s1"&gt;'https://coding.net/u/php/p/Markdown/git/raw/master/syntax.md'&lt;/span&gt;
$ vi syntax.md
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;Title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Markdown&lt;/span&gt; &lt;span class="n"&gt;Chinese&lt;/span&gt; &lt;span class="n"&gt;Syntax&lt;/span&gt; 
&lt;span class="n"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2010&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;04&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="n"&gt;Modified&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2010&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;04&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;
&lt;span class="n"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;markdown&lt;/span&gt;
&lt;span class="n"&gt;Tags&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pelican&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;publishing&lt;/span&gt;
&lt;span class="n"&gt;Slug&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;md&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;cn&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;syntax&lt;/span&gt;
&lt;span class="n"&gt;Authors&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Yuk&lt;/span&gt; &lt;span class="n"&gt;Wong&lt;/span&gt;
&lt;span class="n"&gt;Summary&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Chinese&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;Markdown&lt;/span&gt; &lt;span class="n"&gt;Syntax&lt;/span&gt;



&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="err"&gt;访问&lt;/span&gt; &lt;span class="n"&gt;Wow&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;Ubuntu&lt;/span&gt;&lt;span class="o"&gt;](&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="n"&gt;wowubuntu&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;com&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;NOTE&lt;/span&gt;&lt;span class="o"&gt;:**&lt;/span&gt; &lt;span class="n"&gt;This&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;Simplelified&lt;/span&gt;  &lt;span class="n"&gt;Chinese&lt;/span&gt; &lt;span class="n"&gt;Edition&lt;/span&gt; &lt;span class="n"&gt;Document&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;Markdown&lt;/span&gt; &lt;span class="n"&gt;Syntax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;If&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;are&lt;/span&gt; &lt;span class="n"&gt;seeking&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;English&lt;/span&gt; &lt;span class="n"&gt;Edition&lt;/span&gt; &lt;span class="n"&gt;Document&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Please&lt;/span&gt; &lt;span class="n"&gt;refer&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Markdown&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Syntax&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;eng&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;eng&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="o"&gt;]:&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="n"&gt;daringfireball&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;net&lt;/span&gt;&lt;span class="sr"&gt;/projects/markdown/s&lt;/span&gt;&lt;span class="n"&gt;yntax&lt;/span&gt;

&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="err"&gt;声明：&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="err"&gt;这份文档派生&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fork&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="err"&gt;于&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="err"&gt;繁体中文版&lt;/span&gt;&lt;span class="o"&gt;](&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;tw&lt;/span&gt;&lt;span class="o"&gt;/)&lt;/span&gt;&lt;span class="err"&gt;，在此基础上进行了繁体转简体工作，并进行了适当的润色。此文档用&lt;/span&gt; &lt;span class="n"&gt;Markdown&lt;/span&gt; &lt;span class="err"&gt;语法编写，你可以到这里&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="err"&gt;查看它的源文件&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;src1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;。「繁体中文版的原始文件可以&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="err"&gt;查看这里&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="err"&gt;。」&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;By&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;riku&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;

&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="err"&gt;注：&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="err"&gt;本项目托管于&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;GitCafe&lt;/span&gt;&lt;span class="o"&gt;][]&lt;/span&gt;&lt;span class="err"&gt;上，请通过&lt;/span&gt;&lt;span class="s2"&gt;"派生"&lt;/span&gt;&lt;span class="err"&gt;和&lt;/span&gt;&lt;span class="s2"&gt;"合并请求"&lt;/span&gt;&lt;span class="err"&gt;来帮忙改进本项目。&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;生成html并测试&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ make html serve
pelican /path/to/blog/content -o /path/to/blog/output -s /path/to/blog/pelicanconf.py 
Done: Processed &lt;span class="m"&gt;1&lt;/span&gt; article, &lt;span class="m"&gt;0&lt;/span&gt; drafts, &lt;span class="m"&gt;0&lt;/span&gt; pages and &lt;span class="m"&gt;0&lt;/span&gt; hidden pages in 0.65 seconds.
&lt;span class="nb"&gt;cd&lt;/span&gt; /path/to/blog/output &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; python3 -m pelican.server
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;浏览器打开http://localhost:8000&lt;/p&gt;
&lt;p&gt;&lt;img alt="Markdown 语法测试" src="https://sinoyster.github.io/articles/2016/01/08/markdown-syntax-test.png"/&gt;&lt;/p&gt;
&lt;h2 id="toc_b0201fcca7bd4d7390a587558f22951f"&gt;创建Github Pages&lt;/h2&gt;
&lt;p&gt;Github Pages 可以方便Github用户或者项目快速部署静态网站，Github Pages有两种方式
&lt;em&gt; 一种是用户的对应域名是http://username.github.io
&lt;/em&gt; 一种是项目的对应域名是http://username.github.io/repository&lt;/p&gt;
&lt;p&gt;这里我们主要介绍用户页面，设置步骤如下
&lt;em&gt; &lt;a href="https://github.com/"&gt;注册&lt;/a&gt;一个Github帐号，有的请忽略
&lt;/em&gt; 建立一个名叫&lt;strong&gt;username.github.io&lt;/strong&gt;的仓库, username就是你注册的用户名&lt;a href="https://help.github.com/articles/create-a-repo/"&gt;Here’s&lt;/a&gt; a more detailed guide on how to do this.
&lt;em&gt; 进入到刚才创建的blog目录， 初始化git项目，并添加远程仓库
    &lt;code&gt;bash
    git init 
    git remote add origin git@github.com:username/username.github.io.git
    # 把 **username** 换成你注册的用户名&lt;/code&gt;
&lt;/em&gt; Github Page会把仓库中master分支上的html显示在 https://username.github.io上&lt;/p&gt;
&lt;h2 id="toc_9a8043dda17cb70a55608952c29dc6a3"&gt;博客的分支规划&lt;/h2&gt;
&lt;p&gt;因为静态页面的发布只能通过项目的&lt;strong&gt;master&lt;/strong&gt;分支，所以需要对分支进行简单规划一下
&lt;em&gt; &lt;strong&gt;master分支&lt;/strong&gt; 发布分支(github强制)，因为使用make github(内部使用ghp-import)发布，每次发布会删除重建此分支，所有手工编辑文件会被删除, 所以不能用此分支来进行文章编辑。注意要手工修改Makefile的&lt;strong&gt;GITHUB_PAGES_BRANCH=gh-pages
&lt;/strong&gt;为 &lt;strong&gt;GITHUB_PAGES_BRANCH=master&lt;/strong&gt;
&lt;/em&gt; &lt;strong&gt;edit分支&lt;/strong&gt; 是编辑远程主分支，所有文章编辑都merge到此分支， 在次分支通过运行&lt;strong&gt;make github&lt;/strong&gt;会自动的在master分支生成html并把这些静态的html推送到github 的master分支
&lt;em&gt; &lt;strong&gt;e_xxxx&lt;/strong&gt; 是本地编辑子分支，每次新写文章的分支，写完merge到edit分支后可以删除，一般不推送到远程，这样可以多篇文章同时编辑，单独merge.
&lt;/em&gt; &lt;strong&gt;pelican&lt;/strong&gt; 分支是Pelican配置主分支(远程)，纯配置，只含有一两个示例文档，调整配置测试无问题就可以merge到edit分支，同时也可以作为配置分享。
* &lt;strong&gt;p_xxxx&lt;/strong&gt; 配置本地测试子分支，用于测试各种配置、插件和主题，测试稳定后可以合并到pelican分支
代码如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git checkout -b pelican
git add content develop_server.sh pelicanconf.py publishconf.py 
git commit -m &lt;span class="s1"&gt;'项目初始化'&lt;/span&gt;
git push origin pelican
git checkout -b edit 
git push origin edit
make github
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这个时候我们可以看看master分支有些什么?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git checkout master
$ tree -L &lt;span class="m"&gt;1&lt;/span&gt; 
.
├── archives.html
├── author
├── authors.html
├── categories.html
├── category
├── feeds
├── index.html
├── md-cn-syntax.html
├── output
├── plugins
├── __pycache__
├── tag
├── tags.html
├── theme
└── themes
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;全是生成的html，所以再次强调，&lt;strong&gt;不要&lt;/strong&gt;在master进行编辑&lt;/p&gt;
&lt;h2 id="toc_fec3f4fd8c0131bc306c97ab8f48ed0f"&gt;插件和主题安装&lt;/h2&gt;
&lt;p&gt;在添加其他功能之前，建议先fork 官方的plugin和theme，这样对于插件和主题的修改你就可以push回去&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git submodule add git@github.com:getpelican/pelican-plugins.git plugins/pelican-plugins  #这里添加的官方的插件仓库
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在pelicanconf.py中添加&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;PLUGIN_PATHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"plugins/pelican-plugins"&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="toc_3d66cacb79bb990638536b427760fed0"&gt;数学公式的支持&lt;/h2&gt;
&lt;p&gt;在pelicanconf.py 添加添加&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;PLUGINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"render_math"&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;就可以编写公式测试一下了 &lt;code&gt;$E=mc^2$&lt;/code&gt; ，显示 &lt;span class="math"&gt;\(E=mc^2\)&lt;/span&gt;&lt;/p&gt;
&lt;h2 id="toc_c30802389f6b66d3ff120e95b7e4f44b"&gt;jupyter notebook支持&lt;/h2&gt;
&lt;p&gt;ipynb文件的支持通过&lt;strong&gt;&lt;a href="https://github.com/danielfrg/pelican-ipynb"&gt;pelican-ipynb&lt;/a&gt;&lt;/strong&gt;提供
先安装插件，还是先建议fork到自己用户下，再通过git添加子模块&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git submodule add git://github.com/danielfrg/pelican-ipynb.git plugins/ipynb 
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在pelicanconf.py中修改配置&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;MARKUP&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'md'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'ipynb'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;PLUGIN_PATHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"plugins/pelican-plugins"&lt;/span&gt;&lt;span class="p"&gt;,,&lt;/span&gt; &lt;span class="s1"&gt;'./plugins'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;PLUGINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'render_math'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'ipynb.markup'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;用法：
&lt;em&gt; 把ipynb文件放入content目录下，建立一个新的后缀名为ipynb-meta的文件名，如: my_post.ipynb 则对应的文件为 my_post.ipynb-meta
&lt;/em&gt; ipynb-meta中编写pelican的metadata文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;Title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Pandas&lt;/span&gt; 
&lt;span class="n"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2010&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;04&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="n"&gt;Modified&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2010&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;04&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;
&lt;span class="n"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;blog&lt;/span&gt;
&lt;span class="n"&gt;Tags&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pandas&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ipynb&lt;/span&gt;
&lt;span class="n"&gt;Slug&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pandas&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;int&lt;/span&gt;
&lt;span class="n"&gt;Authors&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Yuk&lt;/span&gt; &lt;span class="n"&gt;Wong&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;运行&lt;code&gt;make html serve&lt;/code&gt; 可以查看测试的ipynb文档&lt;/p&gt;
&lt;h2 id="toc_9970ad07468267e2f309f1467c75bb80"&gt;主题&lt;/h2&gt;
&lt;p&gt;主题个有各的口味，我选择&lt;a href="https://github.com/mawenbao/niu-x2-sidebar"&gt;niu-x2-sidebar&lt;/a&gt;
添加到Blog项目&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#添加主题
git submodule add git@github.com:sinoyster/niu-x2-sidebar.git themes/niu-x2-sidebar
#添加自动生成标题的插件，改插件只支持2.7，简单改了一下支持3.x
git submodule add git@github.com:sinoyster/extract_headings.git plugins/extract_headings
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;修改配置&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;THEME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'themes/niu-x2-sidebar'&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt;  &lt;span class="nn"&gt;hashlib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;md5&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;my_slugify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sep&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;md5&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'UTF-8'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="c1"&gt;#m.update(value.encode("UTF-8"))&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;"toc_{}"&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hexdigest&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="n"&gt;MY_SLUGIFY_FUNC&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;my_slugify&lt;/span&gt;

&lt;span class="n"&gt;JINJA_ENVIRONMENT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;'extensions'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'jinja2.ext.ExprStmtExtension'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   &lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;PLUGINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s1"&gt;'gzip_cache'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'extract_headings'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'summary'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'render_math'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'ipynb.markup'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;UPDATEDATE_MODE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'metadata'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;重新make测试一下&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;make html serve
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="toc_3d7ae0bc155c1176e80c7dbd4c397a5c"&gt;其他配置调整&lt;/h2&gt;
&lt;h2 id="toc_74f9c38df856a7270a9ba70400d1c4d6"&gt;Markdown编辑器支持&lt;/h2&gt;
&lt;h2 id="toc_b95c48e2a16da1487303051c9bd3ff7f"&gt;社会化分享&lt;/h2&gt;
&lt;h2 id="toc_55374d7b243cbee29176a641b5887bbf"&gt;评论&lt;/h2&gt;
&lt;h2 id="toc_4a750309a127a41692f8510684f60d2b"&gt;Docker （TODO）&lt;/h2&gt;
&lt;h2 id="toc_7b0245d9d89961d2526d8e33ad0dc922"&gt;独立域名配置&lt;/h2&gt;
&lt;h2 id="toc_2f313f9ba3159ee97638c70b32b721f5"&gt;图片处理&lt;/h2&gt;
&lt;p&gt;github上传
七牛图床，解决图片上传，返回url的问题&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="markdown"></category><category term="blog"></category></entry></feed>